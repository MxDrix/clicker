{"version":3,"sources":["webpack:///./src/app/components/form-newgame/form-newgame.component.html","webpack:///./src/app/components/form-newgame/form-newgame.component.ts","webpack:///./src/app/components/form-newgame/module.ts","webpack:///./src/app/routes/user-page/module.ts","webpack:///./src/app/routes/user-page/router.ts","webpack:///./src/app/routes/user-page/user-page.component.html","webpack:///./src/app/routes/user-page/user-page.component.ts"],"names":[],"mappings":"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","file":"routes-user-page-module.js","sourcesContent":["module.exports = \"<form autocomplete=\\\"off\\\" [formGroup]=\\\"form\\\">\\n  <input name=\\\"nbClick\\\" formControlName=\\\"nbClick\\\" type=\\\"hidden\\\" [(ngModel)]=\\\"nbClick\\\" disabled />\\n</form>\\n\\n<div class=\\\"wrapper\\\">\\n  <div class=\\\"progress-bar\\\">\\n    <span class=\\\"progress-bar-fill\\\" [ngStyle]=\\\"{'width': progressBar + '%'}\\\"></span>\\n  </div>\\n</div>\"","/* \nImports & definition \n*/\n  // Imports\n  import { Component, OnInit, Input, Output, EventEmitter, OnChanges } from '@angular/core';\n  import { FormBuilder, FormGroup, Validators } from '@angular/forms';\n  import { Router } from '@angular/router';\n\n  // Inner\n  import { IdentityModel } from '../../models/identity.model';\n  import { ClickerService } from '../../services/clicker/clicker-service.service';\n  import { UtilsService } from '../../services/utils/utils-service.service';\n\n  // Definition\n  @Component({\n    selector: 'app-form-newgame',\n    templateUrl: './form-newgame.component.html',\n    providers: [ ClickerService ]\n  })\n//\n\n\n/* Export */\n  export class FormNewGameComponent implements OnInit, OnChanges {\n\n    @Input() nbClick: number;\n    @Input() timer: number;\n    @Input() progressBar: number;\n\n    /* \n    Config.\n    */\n      // Declaration\n      public form: FormGroup;\n      public formData: IdentityModel;\n      public passwordError: Boolean = false;\n\n      // Instanciation\n      constructor(\n        private FormBuilder: FormBuilder,\n        private ClickerService: ClickerService,\n        private Router: Router,\n        private UtilsService: UtilsService\n      ) { };\n    //\n\n\n    /* \n    Methods\n    */\n        private initForm = () => {\n          this.form = this.FormBuilder.group({\n            nbClick: [this.nbClick, Validators.required]\n          });\n        }\n    //\n\n    /* \n    Hooks\n    */\n      ngOnInit() {\n        this.initForm();\n      };\n\n      ngOnChanges(){\n        // Check if time is over. If yes, saved data in database and redirect to the leaderboard page\n        if (this.timer == 0) {\n          this.timer = 10000;\n          this.ClickerService.newClicker(this.form.value.nbClick)\n          .then(apiResponse => {\n            this.Router.navigate(['/leaderboard']);\n            this.UtilsService.flashMessage('success', 'Votre score est de ' + this.form.value.nbClick + ' clics !');\n          })\n          .catch(apiResponse => {\n\n          })\n        }\n      };\n    //\n  };\n//","/* \nImports \n*/\n    // Angular\n    import { NgModule } from '@angular/core';\n    import { HttpClientModule } from '@angular/common/http';\n    import { CommonModule } from '@angular/common';\n    import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n    // Inner\n    import { FormNewGameComponent } from \"./form-newgame.component\";\n// \n\n\n/* \nDefinition & export \n*/\n    @NgModule({\n        declarations: [ FormNewGameComponent ],\n        imports: [ \n            CommonModule, \n            HttpClientModule,\n            FormsModule, \n            ReactiveFormsModule\n        ],\n        exports: [ FormNewGameComponent ]\n    })\n\n    export class FormNewGameModule {};\n//","/* \nImports \n*/\n    // Angular\n    import { NgModule } from '@angular/core';\n    import { CommonModule } from '@angular/common';\n\n    // Inner\n    import { Routing } from './router';\n    import { UserPageComponent } from './user-page.component';\n    import { FormNewGameModule } from '../../components/form-newgame/module';\n//\n\n\n/* \nDefinition \n*/\n    @NgModule({\n        declarations: [ UserPageComponent ],\n        imports: [ \n            CommonModule, \n            Routing,\n            FormNewGameModule\n        ]\n    })\n//\n\n\n/* \nExport \n*/\n    export class Module {};\n//","/* \nImports \n*/\n    import { ModuleWithProviders } from '@angular/core';\n    import { Routes, RouterModule } from '@angular/router';\n    import { UserPageComponent } from './user-page.component';\n//\n\n\n/* \nDefinition \n*/\n    const route: Routes = [\n        {\n            path: '',\n            component: UserPageComponent\n        }\n    ];\n//\n\n\n/* \nExport \n*/\n    export const Routing: ModuleWithProviders = RouterModule.forChild(route);\n//","module.exports = \"<p class=\\\"italicFt12\\\">Vous avez tr√®s exactement 10 secondes pour cliquer autant de fois que possible sur le gros bouton ci-dessous, la partie se lancera au premier clic ! Bonne chance !</p>\\n\\n<img #newGameEl \\n  (click)=\\\"UtilsService.switchImgSrc($event, 'tapOff.png', 'tapOn.png'); startNewGame(newGameEl)\\\" \\n  src=\\\"../../../assets/images/tapOff.png\\\" \\n  [attr.data-status]=\\\"status\\\"\\n  class=\\\"maxWidth100\\\"\\n/>\\n\\n<app-form-newgame\\n  [nbClick] = nbClick\\n  [timer] = timer\\n  [progressBar] = progressBar\\n></app-form-newgame>\"","/* \nImports & definition \n*/\n  // Imports\n  import { Component, OnInit } from '@angular/core';\n\n  // Inner\n  import { IdentityModel } from '../../models/identity.model';\n  import { ApiResponseModel } from \"../../models/api.reponse.model\";\n  import { AuthService } from \"../../services/auth/auth-service.service\";\n  import { UtilsService } from \"../../services/utils/utils-service.service\";\n\n  // Definition\n  @Component({\n    selector: 'app-user-page',\n    templateUrl: './user-page.component.html',\n    providers: [ AuthService, UtilsService ]\n  })\n//\n\n\n/* \nExport\n*/\n  export class UserPageComponent implements OnInit {\n\n    /* \n    Config.\n    */\n      // Module injection\n      constructor(\n        private AuthService: AuthService,\n        private UtilsService: UtilsService\n      ) {};\n    //\n\n    // Declare status game, score and timer\n    public status: Number = 0;\n    public nbClick: number = 0;\n    public timer: number = 10;\n    public progressBar: number = 0;\n    public interval;\n\n    /*\n    Methods\n    */\n      public startNewGame = (element) => {\n        // Get the current status\n        this.status = element.getAttribute('data-status');\n\n        if (this.status == 0) {\n          // State => playing game\n          this.status = 1;\n          this.startTimer();\n        }\n\n        if (this.status == 1) {\n          // Increment your score\n          this.nbClick = this.nbClick + 1;\n        }\n\n      }\n\n      public startTimer = () => {\n        this.interval = setInterval(() => {\n          if(this.timer > 0) {\n            this.timer--;\n            this.progressBar = this.progressBar + 10;\n          } else {\n            this.timer = 10;\n          }\n        },1000);\n      }\n    //\n\n\n    /* \n    Hooks\n    */\n      ngOnInit() { \n        this.AuthService.getUserId().then( apiResponse => console.log(apiResponse.data._id) )\n      };\n    //\n  }\n//"],"sourceRoot":""}