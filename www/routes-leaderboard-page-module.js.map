{"version":3,"sources":["webpack:///./src/app/routes/leaderboard-page/leaderboard-page.component.html","webpack:///./src/app/routes/leaderboard-page/leaderboard-page.component.ts","webpack:///./src/app/routes/leaderboard-page/module.ts","webpack:///./src/app/routes/leaderboard-page/router.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6MAA6M,mBAAmB,oEAAoE,4BAA4B,GAAG,2BAA2B,KAAK,qCAAqC,KAAK,mCAAmC,6D;;;;;;;;;;;;;;;;;;;;ACAhb;;EAEE;AACA,UAAU;AACwC;AAKqB;AACS;AACN;AAE1E,aAAa;AAYb;IAEE;;MAEE;IACA,mBAAmB;IACnB,kCACU,WAAwB,EACxB,cAA8B,EAC9B,YAA0B;QAHpC,iBAII;QAHM,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAc;QAEtC,EAAE;QAEK,qBAAgB,GAAG,EAAE,CAAC;QAE7B;;UAEE;QACO,mBAAc,GAAG;YACtB,KAAI,CAAC,cAAc,CAAC,cAAc,EAAE;iBACnC,IAAI,CAAC,kBAAQ;gBACZ,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAChF,CAAC,CAAC;iBACD,KAAK,CAAC,kBAAQ,IAAI,cAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAvB,CAAuB,CAAE,CAAC;QAC/C,CAAC;IAdE,CAAC;IAAA,CAAC;IAeP,EAAE;IAGF;;MAEE;IACA,2CAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,IAAI,CAAE,OAAO,CAAC,GAAG,CAAE,CAAC;QACjD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAAA,CAAC;IAlCO,wBAAwB;QAXpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,2IAAgD;YAChD,SAAS,EAAE,CAAE,+EAAW,EAAE,wFAAc,EAAE,kFAAY,CAAE;SACzD,CAAC;QACJ,EAAE;QAGF;;UAEE;;+EAQ2B,+EAAW;YACR,wFAAc;YAChB,kFAAY;OAT3B,wBAAwB,CAoCpC;IAAD,+BAAC;CAAA;AApCoC;AAqCvC,EAAE;;;;;;;;;;;;;;;;;;;;;AC9DF;;EAEE;AACE,UAAU;AAC+B;AACM;AAE/C,QAAQ;AAC2B;AACqC;AAC5E,EAAE;AAGF;;EAEE;AAcE;IANJ,EAAE;IAGF;;MAEE;IACE;IAAqB,CAAC;IAAT,MAAM;QAblB,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAE,oFAAwB,CAAE;YAC1C,OAAO,EAAE;gBACL,4DAAY;gBACZ,+CAAO;aACV;SACJ,CAAC;QACN,EAAE;QAGF;;UAEE;OACe,MAAM,CAAG;IAAD,aAAC;CAAA;AAAH;AAAG,CAAC;AAC3B,EAAE;;;;;;;;;;;;;AC1BE;AAAA;AAAA;AAAA;AAAuD;AACiB;AAC5E,EAAE;AAGF;;EAEE;AACE,IAAM,KAAK,GAAW;IAClB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oFAAwB;KACtC;CACJ,CAAC;AACN,EAAE;AAGF;;EAEE;AACS,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7E,EAAE","file":"routes-leaderboard-page-module.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"allClickersArray\\\">\\r\\n   <ul id=\\\"leaderboard\\\">\\r\\n      <li *ngFor=\\\"let clicker of allClickersArray\\\" class=\\\"flexBox spaceBetween alignItemsCenter\\\">\\r\\n         <div>{{ clicker.nbClick }}pts</div> \\r\\n         <div class=\\\"italicFt12\\\">\\r\\n             {{ clicker.player.firstname }} {{ clicker.player.lastname }} - {{ clicker.date | date: 'dd/MM/yyyy' }} - {{ clicker.date | date: 'HH:mm:ss' }}\\r\\n         </div>\\r\\n      </li>\\r\\n   </ul>\\r\\n</div>\\r\\n\"","/* \r\nImports & definition \r\n*/\r\n  // Imports\r\n  import { Component, OnInit } from '@angular/core';\r\n\r\n  // Inner\r\n  import { UserModel } from '../../models/user.model';\r\n  import { ApiResponseModel } from \"../../models/api.reponse.model\";\r\n  import { AuthService } from \"../../services/auth/auth-service.service\";\r\n  import { ClickerService } from \"../../services/clicker/clicker-service.service\";\r\n  import { UtilsService } from \"../../services/utils/utils-service.service\";\r\n\r\n  // Definition\r\n  @Component({\r\n    selector: 'app-leaderboard-page',\r\n    templateUrl: './leaderboard-page.component.html',\r\n    providers: [ AuthService, ClickerService, UtilsService ]\r\n  })\r\n//\r\n\r\n\r\n/* \r\nExport\r\n*/\r\n  export class LeaderboardPageComponent implements OnInit {\r\n\r\n    /* \r\n    Config.\r\n    */\r\n      // Module injection\r\n      constructor(\r\n        private AuthService: AuthService,\r\n        private ClickerService: ClickerService,\r\n        private UtilsService: UtilsService\r\n      ) {};\r\n    //\r\n\r\n    public allClickersArray = [];\r\n\r\n    /*\r\n    Methods\r\n    */\r\n      public getAllClickers = () => {\r\n        this.ClickerService.getAllClickers()\r\n        .then(response => {\r\n          this.allClickersArray = this.UtilsService.sortByKey(response.data, 'nbClick');\r\n        })\r\n        .catch(response => console.error(response) );\r\n      }\r\n    //\r\n\r\n\r\n    /* \r\n    Hooks\r\n    */\r\n      ngOnInit() { \r\n        this.AuthService.getUserId().then( console.log );\r\n        this.getAllClickers();\r\n      };\r\n    //\r\n  }\r\n//","/* \r\nImports \r\n*/\r\n    // Angular\r\n    import { NgModule } from '@angular/core';\r\n    import { CommonModule } from '@angular/common';\r\n\r\n    // Inner\r\n    import { Routing } from './router';\r\n    import { LeaderboardPageComponent } from './leaderboard-page.component';\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\n    @NgModule({\r\n        declarations: [ LeaderboardPageComponent ],\r\n        imports: [ \r\n            CommonModule, \r\n            Routing\r\n        ]\r\n    })\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\n    export class Module {};\r\n//","/* \r\nImports \r\n*/\r\n    import { ModuleWithProviders } from '@angular/core';\r\n    import { Routes, RouterModule } from '@angular/router';\r\n    import { LeaderboardPageComponent } from './leaderboard-page.component';\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\n    const route: Routes = [\r\n        {\r\n            path: '',\r\n            component: LeaderboardPageComponent\r\n        }\r\n    ];\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\n    export const Routing: ModuleWithProviders = RouterModule.forChild(route);\r\n//"],"sourceRoot":""}